function [params,NLL] = FitGaussAlpha(Data, first_guess)% [params,NLL] = FitGaussAlpha(Data, first_guess)% % Before running this fcn, should run data through prepData first to get Data format.% Obtain the maximum likelihood estimate of the cumulative normal psychometric% function for the data stored in Data.  Data contains 3 cols.  Col 1: freq difference.% Col 2: correct response. Col 3: response. % Key constraints% (1) C1 < C2% (2) If alpha < 0.5, then C1 should be < 0 and C2 > 0% (3) if alpha > 0.5, then 0 < C1 < C2.% If alpha > 0.5,%   for Dneg (Dpos) equal to the average value of D over all trials (from%   40 on) in which D is negative (positive), these are reasonable guesses:%   C1 = (alpha*|Dneg|-(1-alpha)*|Dneg|)/2 = (2*alpha-1)*|Dneg|/2%	C2 = (C1 + Dpos)/2global D ResponseD = Data(:,1);CorrectResp = Data(:,2);Response = Data(:,3);if nargin < 2 || isempty(first_guess)    tmp = mean(abs(D(51:100,1)));        alpha = .25; % set this to .25 or .75 before running    noiseSigma = tmp/3;    C1 = (alpha*tmp - (1-alpha)*tmp)/2;    C2 = (C1 + tmp)/2;        first_guess = [alpha, noiseSigma,C1,C2];endOptStruct = optimset('MaxFunEvals',100000,'MaxIter',100000,'TolFun',0.0000001,'TolX',0.0000001);[params,NLL] = fminsearch('nLogLhoodAlpha', first_guess,OptStruct);